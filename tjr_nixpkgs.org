This is a copy of the nixpkgs repo, with additional packages defined
for personal use (typically versions of isabelle and HOL).

* 2014-??-?? initial setup

--

Updated/new files:

pkgs/applications/science/logic/myhol   |fails (no hash for fetchgit?)
pkgs/applications/science/logic/hol4k9  |ok                           
pkgs/applications/science/logic/isabelle|ok for isa2013 - needs updating, but probably not worth it, just install from web


--

merge changes from upstream: https://help.github.com/articles/fork-a-repo

--

Checkout nixpkgs from github

Add a directory like pkgs/applications/science/logic/myhol/

In this directory, link to e.g. /tmp/l/general/research/code/nix/myhol/default.nix

Change pkgs/top-level/all-packages.nix so that it has an extra clause: myhol = callPackage ../applications/science/logic/myhol { };

put this clause just after the hol clause

Then in the top-level of the github checkout, type:

nix-build -A hol4k9

or 

nix-build -A myhol


finally, ls -al to see where result points, then nix-env -i ./result


TODO: add a polyml 5.5 version to nixpkgs



https://nixos.org/wiki/How_to_add_files_to_the_nix-store


* 2014-08-29 building

Updated/new files:

pkgs/development/compilers/mypolyml     |builds
pkgs/applications/science/logic/myhol   |
pkgs/applications/science/logic/hol4k9  |builds with mypolyml
pkgs/applications/science/logic/isabelle|


nix-build -A hol4k9 gives

Loading system specific functions
Compiling system specific functions (sig sml)
Beginning configuration.
Making tools/mllex/mllex.exe.
Poly/ML 5.5.1 Release
/nix/store/wi8lcasqx0kbabdrdcfymka6r09kp1zh-polyml-5.5.1/lib/libpolyml.a(processes.o): In function `Processes::TestSynchronousRequests(TaskData*)':
(.text+0x1de): undefined reference to `__cxa_allocate_exception'
/nix/store/wi8lcasqx0kbabdrdcfymka6r09kp1zh-polyml-5.5.1/lib/libpolyml.a(processes.o): In function `Processes::TestSynchronousRequests(TaskData*)':
(.text+0x1ed): undefined reference to `__cxa_throw'
...
nix/store/wi8lcasqx0kbabdrdcfymka6r09kp1zh-polyml-5.5.1/lib/libpolyml.a(elfexport.o): In function `ELFExport::exportStore()':
(.text+0x1126): undefined reference to `operator delete[](void*)'
/nix/store/wi8lcasqx0kbabdrdcfymka6r09kp1zh-polyml-5.5.1/lib/libpolyml.a(elfexport.o):(.rodata._ZTI9ELFExport[_ZTI9ELFExport]+0x0): undefined reference to `vtable for __cxxabiv1::__vmi_class_type_info'
/nix/store/wi8lcasqx0kbabdrdcfymka6r09kp1zh-polyml-5.5.1/lib/libpolyml.a(elfexport.o):(.eh_frame+0x113): undefined reference to `__gxx_personality_v0'
collect2: error: ld returned 1 exit status
Failed to build mllex.
builder for `/nix/store/wadmgw4jcqnjqvg1hnhcgxshgw4q18l1-hol4-k.9.drv' failed with exit code 1
error: build of `/nix/store/wadmgw4jcqnjqvg1hnhcgxshgw4q18l1-hol4-k.9.drv' failed

looks like libpoly is built strangely, but it is built normally

so this may be a problem with polyml being too new?

maybe a problem with linking in c++ libraries
--

presumably we can go back to the commit where I added hol49 and build with old poly - no this seems to fail in the same way (because using the new poly)

from hol page: "Note also that Poly/ML 5.5.1 does not work unless installed with the --enable-shared flag. This option must be passed to the invocation of configure that is the first step of building Poly/ML from sources."

so the solution is to fork polyml in nixpkgs, and build with that

--

patched mypolyml and hol4k9; everything now builds fine!


something got screwed up when switching branches

trying again...

poly builds fine

same problem with things apparently screwed up, fixed by cd'ing to nixpkgs dir again - possibly git gets confused somehow?
* 2015-04-29 merge with upstream

  - nix-build -A hol4k9 builds fine

* 2015-04-29 update for hol4k10

  - pkgs/applications/science/logic/hol4k10
  - change src to use fetchgit
    - logic/coq/HEAD.nix has an example
      - where does sha256 come from? why isn't this just the commit rev?
        - http://comments.gmane.org/gmane.linux.distributions.nixos/12143
        - use nix-prefetch-git utility
          - we dont' have this; need to update nix itself
        - nix-env -i nix-prefetch-scripts
        - nix-prefetch-git --url https://github.com/HOL-Theorem-Prover/HOL/ --rev HEAD
          - fatal: unable to access 'https://github.com/HOL-Theorem-Prover/HOL/': SSL certificate problem: unable to get local issuer certificate
          - probably because this is using nix git which can't 
          - https://github.com/NixOS/nixpkgs/issues/3382
          - following first suggestion
          - export GIT_SSL_CAINFO=$HOME/.nix-profile/etc/ca-bundle.crt
          - nix prefetch works!
    - https://github.com/HOL-Theorem-Prover/HOL/
    - k10 commit is 7fcca392d98b86bf480b76844e42d6e1e61d1fd2
    - nix-build -A hol4k10 fails

git revision is 7fcca392d98b86bf480b76844e42d6e1e61d1fd2
git human-readable version is -- none --
Commit date is 2014-11-10 15:37:02 +1100
removing `.git'...
building path(s) ‘/nix/store/2drb28zhq7wfyip905bxmwd0yflhi2f8-hol4-k.10’
tar (child): /nix/store/gaidmy0xwvf0w5lm5qhd94g1b02y0fxc-HOL-7fcca39: Cannot read: Is a directory
tar (child): At beginning of tape, quitting now
tar (child): Error is not recoverable: exiting now

gzip: stdin: unexpected end of file
tar: Child returned status 2
tar: Error is not recoverable: exiting now
builder for ‘/nix/store/1as9lbmcslpih6bi0xqviv31vlqidc81-hol4-k.10.drv’ failed with exit code 2


    - nix-build --keep-failed
    - debugging following https://nixos.org/wiki/Debugging_a_Nix_Package
    - we have a buildCommand which presumably overrides all inbuilt phases
    - after debugging, fail because of an attempt to write to the store:
ls 
Determining configuration parameters: holdir OS poly polymllibdir 
OS:                 linux
poly:               /nix/store/wcfyz07axlqa8lid1xyf9rpygr4kgwgs-mypolyml-5.5.1/bin/poly
polymllibdir:       /nix/store/wcfyz07axlqa8lid1xyf9rpygr4kgwgs-mypolyml-5.5.1/lib
holdir:             /nix/store/0fmhx2ilwdkl0bzn0baysb403crqjl6k-hol4-k.10/src/HOL-7fcca39
DOT_PATH:           /usr/bin/dot

Configuration will begin with above values.  If they are wrong
press Control-C.

Will continue in 1 seconds.

Loading system specific functions
Exception- Io {cause = SysErr ("Permission denied", SOME EACCES), function = "TextIO.openOut", name = "/nix/store/0fmhx2ilwdkl0bzn0baysb403crqjl6k-hol4-k.10/src/HOL-7fcca39/tools-poly/Holmake/Systeml.sml"} raised
Exception- Io {cause = SysErr ("Permission denied", SOME EACCES), function = "TextIO.openOut", name = "/nix/store/0fmhx2ilwdkl0bzn0baysb403crqjl6k-hol4-k.10/src/HOL-7fcca39/tools-poly/Holmake/Systeml.sml"} raised


** You must do
     poly < tools/smart-configure.sml
** from the root HOL directory

val it = (): unit

    - looks like the premissions of the copied srcs should be relaxed
    - this looks like it will build; it does
    - to install: nix-env -i ./result
